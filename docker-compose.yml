services:
  db:
    image: postgres:16
    container_name: wallet_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-wallet}
      POSTGRES_USER: ${POSTGRES_USER:-wallet}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-wallet}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

  app:
    container_name: wallet_app
    build:
      context: .               # <— где искать контекст сборки
      dockerfile: Dockerfile   # <— какой Dockerfile использовать
    environment:
      SERVER_PORT: ${SERVER_PORT:-8080}
      DB_URL: jdbc:postgresql://db:5432/${POSTGRES_DB:-wallet}
      DB_USER: ${POSTGRES_USER:-wallet}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-wallet}
      DB_POOL_SIZE: ${DB_POOL_SIZE:-50}
      DB_MIN_IDLE: ${DB_MIN_IDLE:-10}
      DB_CONN_TIMEOUT_MS: ${DB_CONN_TIMEOUT_MS:-500}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "${SERVER_PORT:-8080}:${SERVER_PORT:-8080}"
    restart: unless-stopped
    # если на Windows/WSL бывают проблемы с кэшом Maven, можно добавить:
    # tmpfs:
    #   - /root/.m2

volumes:
  pgdata: